<Page x:Class="Vue.NavigationPage"
      xmlns:my="clr-namespace:Microsoft.Surface.Presentation.Controls;assembly=Microsoft.Surface.Presentation"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:vueModele="clr-namespace:Prototype1Table.VueModele;assembly=Prototype1Table"
      xmlns:vue="clr-namespace:Prototype1Table.Vue;assembly=Prototype1Table"
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      mc:Ignorable="d" 
      d:DesignHeight="470" d:DesignWidth="645"
      x:Name="navPage"
      MouseMove="OnMouseMove"
      MouseRightButtonUp="OnMouseRightButtonUp"
      MouseRightButtonDown="OnMouseRightButtonDown"
	  Title="NavigationPage">

    <Page.Resources>
        <Style
            x:Key="NavButtonStyle"
            BasedOn="{StaticResource {x:Type Button}}"
            TargetType="Button">
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect/>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style pour les ScatterViewItem contenant les médias -->
        <Style x:Key="ScatterViewItemStyleMedias" TargetType="{x:Type my:ScatterViewItem}">
            <Setter Property="Center" Value="{Binding position, Mode=TwoWay}"/>
            <Setter Property="Orientation" Value="{Binding orientation, Mode=TwoWay}"/>
            <Setter Property="MinWidth" Value="200"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type my:ScatterViewItem}">
                        <ContentPresenter />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Page.Resources>
    

    
    <Grid
        Name="theGrid"
        Background="Black">

        <Canvas Name="RectangleContainingBackgroundImage"
                   IsManipulationEnabled="True"
                   RenderTransform="{Binding Path=ImageTransform}">
            <Canvas.Background>
                <ImageBrush x:Name="BackgroundImage" Stretch="Uniform"/>
            </Canvas.Background>
        </Canvas>

        <Button x:Name="SwitchModeButton" HorizontalAlignment="Right" VerticalAlignment="Top" Style="{StaticResource NavButtonStyle}" Click="SwitchModeButton_Click"/>
        <Button x:Name="MenuButton" Height="45" Width="45" Canvas.Left="1" Canvas.Top="1" HorizontalAlignment="Left" VerticalAlignment="Top" Click="MenuButton_Click">
            <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Stretch="Uniform">
                <Canvas Name="svg2" Width="512" Height="512">
                    <Canvas.Resources/>
                    <!--Unknown tag: metadata-->
                    <!--Unknown tag: sodipodi:namedview-->
                    <Canvas Name="g3">
                        <Canvas.RenderTransform>
                            <TranslateTransform X="0" Y="448"/>
                        </Canvas.RenderTransform>
                        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Name="path5" Fill="#FF000000" StrokeThickness="12" Stroke="#FF000000" StrokeMiterLimit="4" StrokeLineJoin="Round" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat">
                            <Path.Data>
                                <PathGeometry Figures="m 16 256 240 -192 96 72 0 -32 48 0 0 72 96 80 -48 0 0 192 -120 0 0 -160 -96 0 0 160 -168 0 0 -192 z" FillRule="NonZero"/>
                            </Path.Data>
                            <Path.RenderTransform>
                                <TranslateTransform X="0" Y="-448"/>
                            </Path.RenderTransform>
                        </Path>
                    </Canvas>
                </Canvas>
            </Viewbox>
        </Button>
        <Button x:Name="PreviousDocButton" Content="&lt;" HorizontalAlignment="Left" Height="37" Margin="0" Width="45" Click="PreviousDocButton_Click" VerticalAlignment="Center" Style="{StaticResource NavButtonStyle}"/>
        <Button x:Name="NextDocButton" Content="&gt;" HorizontalAlignment="Right" Margin="0" Width="45" Height="37"   Click="NextDocButton_Click" VerticalAlignment="Center" Style="{StaticResource NavButtonStyle}"/>
        <Button x:Name="PreviousCategoryButton" Margin="0" VerticalAlignment="Top" HorizontalAlignment="Center" Click="PreviousCategoryButton_Click" Style="{StaticResource NavButtonStyle}">
            <StackPanel>
                <TextBlock Text="^" HorizontalAlignment="Center"/>
                <TextBlock Name="PrevCategoryName" HorizontalAlignment="Center"/>
            </StackPanel>
        </Button>
        <Button x:Name="NextCategoryButton" Margin="0,0,0,53" VerticalAlignment="Bottom"  Click="NextCategoryButton_Click" HorizontalAlignment="Center" Style="{StaticResource NavButtonStyle}">
            <StackPanel>
                <TextBlock Name="NextCategoryName" HorizontalAlignment="Center"/>
                <TextBlock Text="V" HorizontalAlignment="Center"/>
            </StackPanel>
        </Button>
        <Slider Minimum="1" Height="27" Margin="0" VerticalAlignment="Bottom" Width="635" Name="DocSlider" IsSnapToTickEnabled="True" Focusable="False" PreviewMouseUp="DocSlider_PreviewMouseUp" Thumb.DragCompleted="DocSlider_DragCompleted"/>

        <TextBlock x:Name="SliderInfoTextBlock" Background="#FFEEEEB5" TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="75" TextAlignment="Center" Margin="0,0,0,32" FontWeight="Bold">
            <TextBlock.Effect>
                <DropShadowEffect/>
            </TextBlock.Effect>
        </TextBlock>
        <Canvas>
            <Rectangle
                x:Name="newPOISelectionRectangle"
                Stroke="Black"
                StrokeThickness="1"/>
        </Canvas>

        <!--Affichage des Pois-->
        
        <ItemsControl Name="PoisItemControl" ItemsSource="{Binding ListePois}">
            
            <ItemsControl.ItemContainerStyle>
                <Style>
                    <Setter Property="FrameworkElement.DataContext" Value="{Binding RelativeSource={RelativeSource Self}}"/>
                    <Setter Property="Canvas.Top" Value="{Binding Y, Mode=OneWay}"/>
                    <Setter Property="Canvas.Left" Value="{Binding X, Mode=OneWay}"/>
                </Style>
            </ItemsControl.ItemContainerStyle>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Canvas>
                        <Canvas.Resources>
                            <DataTemplate DataType="{x:Type vueModele:CouronneVM}">
                                <vue:Couronne Margin="{Binding MargeCouronne, Mode=OneWay}"/>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type vueModele:PoiConsultationVM}">
                                <vue:Poi Margin="{Binding MargePoi, Mode=OneWay}"/>
                            </DataTemplate>
                        </Canvas.Resources>
                        <ContentControl Content="{Binding VueCourante}" />
                    </Canvas>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <!--Medias-->
        <my:ScatterView Name="ScatterMedias" 
                        ItemContainerStyle="{StaticResource ScatterViewItemStyleMedias}"
                        Width="{Binding ElementName=environnement, Path=Width}" Height="{Binding ElementName=environnement, Path=Height}"
                        ItemsSource="{Binding mediasOuverts}">
            <my:ScatterView.ItemTemplate>

                <DataTemplate>
                    <Grid>
                        <Viewbox Name="grid" VerticalAlignment="Top" HorizontalAlignment="Right">
                            <Grid>
                                <Grid.Resources>
                                    <!--Images-->
                                    <DataTemplate DataType="{x:Type vueModele:ImageVM}">
                                        <MediaElement Source="{Binding cheminMedia}" />
                                    </DataTemplate>

                                    <!--Videos-->
                                    <DataTemplate DataType="{x:Type vueModele:VideoVM}">
                                        <vue:Video/>
                                    </DataTemplate>

                                    <!--Diaporamas-->
                                    <DataTemplate DataType="{x:Type vueModele:DiaporamaVM}">
                                        <vue:Diaporama/>
                                    </DataTemplate>
                                </Grid.Resources>

                                <Canvas Name="ChargementConteneur" Width="400" Height="250" Grid.ZIndex="1" Grid.Column="0" Grid.Row="1">
                                    <Grid Name="ChargementCercle" Margin="200,125,0,0" >
                                        <Path  StrokeThickness="10" StrokeLineJoin="Round" Fill="{x:Null}"
                                            Data="M -50,0 A 33,33 45 0 1 50,0" UseLayoutRounding="False" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat">
                                            <Path.Stroke>
                                                <LinearGradientBrush>
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStop Offset="0.25" Color="#00009BAD" />
                                                        <GradientStop Offset="0.9" Color="#FF009BAD" />
                                                    </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Path.Stroke>
                                        </Path>
                                        <Path Stroke="#FF009BAD" StrokeThickness="10" StrokeLineJoin="Round" Fill="{x:Null}" 
                                              Data="M -50,0 A 33,33 45 0 0 50,0" UseLayoutRounding="False" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                                        </Path>
                                        <Grid.RenderTransform>
                                            <RotateTransform/>
                                        </Grid.RenderTransform>
                                        <Grid.Triggers>
                                            <EventTrigger RoutedEvent="Loaded">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="(Rectangle.RenderTransform).(RotateTransform.Angle)" To="-360" Duration="0:0:1" RepeatBehavior="Forever"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </Grid.Triggers>
                                    </Grid>
                                </Canvas>

                                <ContentPresenter Name="test" Content="{Binding}" Grid.ZIndex="2" />

                            </Grid>
                        </Viewbox>
                        <Button Grid.ZIndex="3" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,-10,-10,0"  Height="50" Width="50" Foreground="{x:Null}" BorderBrush="{x:Null}" Background="{x:Null}" BorderThickness="0">
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid>
                                        <Rectangle Fill="#009BAD"/>
                                        <Path Stroke="#FFFFFFFF" StrokeThickness="4.0" StrokeLineJoin="Round" Fill="{x:Null}"
                                                        Data="M 10,10 L 40,40" UseLayoutRounding="False" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat" />
                                        <Path Stroke="#FFFFFFFF" StrokeThickness="4.0" StrokeLineJoin="Round" Fill="{x:Null}"
                                                        Data="M 40,10 L 10,40" UseLayoutRounding="False" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat" />
                                    </Grid>
                                </ControlTemplate>
                            </Button.Template>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction Command="{Binding ElementName=Conteneur, Path=DataContext.FermetureMedia}" CommandParameter="{Binding}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>

                        <Button Grid.ZIndex="3" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,-10,50,0" Height="50" Width="50" Foreground="{x:Null}" BorderBrush="{x:Null}" Background="{x:Null}" BorderThickness="0">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=environnement, Path=DataContext.PresenceTablette}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid>
                                        <Image Source="/Prototype1Table;component/Resources/TabletteCarre.png"/>
                                    </Grid>
                                </ControlTemplate>
                            </Button.Template>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction Command="{Binding EnvoiTablettes}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>

                        <Button Grid.ZIndex="3" VerticalAlignment="Top" HorizontalAlignment="Right" Height="50" Width="50" Foreground="{x:Null}" BorderBrush="{x:Null}" Background="{x:Null}" BorderThickness="0">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                    <Setter Property="Margin" Value="0,-10,110,0"/>
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=environnement, Path=DataContext.PresenceTablette}" Value="False"/>
                                                <Condition Binding="{Binding ElementName=environnement, Path=DataContext.PresenceTbi}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Margin" Value="0,-10,50,0"/>
                                        </MultiDataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=environnement, Path=DataContext.PresenceTbi}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid>
                                        <Image Source="/Prototype1Table;component/Resources/TbiCarre.png"/>
                                    </Grid>
                                </ControlTemplate>
                            </Button.Template>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction Command="{Binding EnvoiTbi}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                    </Grid>
                </DataTemplate>
            </my:ScatterView.ItemTemplate>
        </my:ScatterView>
    </Grid>
</Page>
