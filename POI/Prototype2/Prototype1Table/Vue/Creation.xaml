<UserControl x:Class="Prototype1Table.Vue.Creation"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:my="clr-namespace:Microsoft.Surface.Presentation.Controls;assembly=Microsoft.Surface.Presentation"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF4"
             xmlns:vue="clr-namespace:Prototype1Table.Vue"
             xmlns:vueModele="clr-namespace:Prototype1Table.VueModele"
             xmlns:table="clr-namespace:Prototype1Table"
             table:SurfaceFingerFilter.Filter="True"
             mc:Ignorable="d" 
             Name="Conteneur"
             Loaded="Fenetre_Loaded">

    <UserControl.Resources>
        <MatrixTransform x:Key="InitialMatrixTransform">
            <MatrixTransform.Matrix>
                <Matrix OffsetX="0" OffsetY="0"/>
            </MatrixTransform.Matrix>
        </MatrixTransform>
        <Style x:Key="ScatterViewItemStyleCarte" TargetType="{x:Type my:ScatterViewItem}">
            <!-- Pour que le scatterviewitem se resize en fonction de la taille de son contenu -->
            <Setter Property="Width" Value="{Binding Path=Content.Width, RelativeSource={RelativeSource Self}, Mode=TwoWay}"/>
            <Setter Property="Height" Value="{Binding Path=Content.Height, RelativeSource={RelativeSource Self}, Mode=TwoWay}"/>
            <Setter Property="CanRotate" Value="False"/>
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type my:ScatterViewItem}">
                        <ContentPresenter />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style pour capturer la taille réelle de l'image de la carte de niveau 1 via SizeObserver -->
        <Style x:Key="ImageSizeStyleCarte" TargetType="{x:Type Image}">
            <!-- Properties nécessaires à la récupération de ActualWidth et ActualHeight -->
            <Setter Property="table:SizeObserver.Observe" Value="true"/>
            <Setter Property="table:SizeObserver.ObservedWidth" Value="{Binding ActualWidthMap, Mode=OneWayToSource}"/>
            <Setter Property="table:SizeObserver.ObservedHeight" Value="{Binding ActualHeightMap, Mode=OneWayToSource}"/>
        </Style>
    </UserControl.Resources>

    <Grid Name="environnement">

        <!--carte-->
        <my:ScatterView Name="carte" Opacity="0"
                            Width="{Binding ElementName=environnement, Path=Width}" Height="{Binding ElementName=environnement, Path=Height}" 
                            IsManipulationEnabled="True">


            <my:ScatterViewItem Name="item" 
                                Style="{StaticResource ScatterViewItemStyleCarte}" 
                                MinWidth="500" MinHeight="500">


                <Grid Name ="gridCarte" Height="{Binding HeightGridMap, Mode=Twoway}" Width="{Binding WidthGridMap, Mode=Twoway}">
                    <!-- Affichage et manipulation de la carte elle même -->
                    <Image x:Name="fond1" Source="{Binding Carte1}" Style="{StaticResource ImageSizeStyleCarte}" Visibility="{Binding VisibiliteCarte1}"/>
                    <Image x:Name="fond2" Source="{Binding Carte2}" Visibility="{Binding VisibiliteCarte2}"/>
                    <Image x:Name="fond3" Source="{Binding Carte3}" Visibility="{Binding VisibiliteCarte3}"/>


                    <!-- Affichage et positionnement des POI -->
                    <ItemsControl ItemsSource="{Binding ListePois}">
                        <ItemsControl.ItemContainerStyle>
                            <Style>
                                <Setter Property="FrameworkElement.DataContext" Value="{Binding RelativeSource={RelativeSource Self}}"/>
                                <Setter Property="Canvas.Top" Value="{Binding Y, Mode=OneWay}"/>
                                <Setter Property="Canvas.Left" Value="{Binding X, Mode=OneWay}"/>
                                <Setter Property="Canvas.ZIndex" Value="{Binding Zindex, Mode=OneWay}"/>
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type vueModele:PoiCreationVM}">
                                <Canvas Visibility="{Binding PoiVisible, Mode=OneWay}" Height="{Binding HeightPoi, Mode=OneWay}" 
                                        Width="{Binding WidthPoi, Mode=OneWay}" MaxHeight="200" MaxWidth="200">
                                    <vue:PoiCreation Margin="{Binding MargePoi, Mode=OneWay}"
                                                 MouseDown="PoiCreation_TouchDown"
                                                 PreviewMouseUp="PoiCreation_TouchUp" >
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseMove">
                                                <cmd:EventToCommand Command="{Binding PoiTouchMove}" PassEventArgsToCommand="True"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </vue:PoiCreation>
                                    <my:ElementMenu IsSubmenuOpen="{Binding MenuOuvert, Mode=TwoWay}" MaxHeight="200" MaxWidth="200"
                                                    ActivationMode="AlwaysActive" Canvas.Left="{Binding Menu_X}" Canvas.Top="{Binding Menu_Y}">
                                        <my:ElementMenuItem VerticalContentAlignment="Center" Header="Renommer" Command="{Binding OuvertureMenuRenommage}">
                                            <my:ElementMenuItem.Background>
                                                <ImageBrush ImageSource="/Prototype1Table;component/Resources/renameB.png"/>
                                            </my:ElementMenuItem.Background>
                                        </my:ElementMenuItem>
                                        <my:ElementMenuItem VerticalContentAlignment="Center" Header="Supprimer" Command="{Binding SuppressionPoi}">
                                            <my:ElementMenuItem.Background>
                                                <ImageBrush ImageSource="/Prototype1Table;component/Resources/deleteB.png"/>
                                            </my:ElementMenuItem.Background>
                                        </my:ElementMenuItem>
                                        <my:ElementMenuItem VerticalContentAlignment="Center" Header="Fermer" Command="{Binding FermetureMenu}">
                                            <my:ElementMenuItem.Background>
                                                <ImageBrush ImageSource="/Prototype1Table;component/Resources/closeB.png"/>
                                            </my:ElementMenuItem.Background>
                                        </my:ElementMenuItem>
                                    </my:ElementMenu>

                                    <!-- Menu pour le renommage des POI-->
                                    <StackPanel Name="menuRenommage" Background="#93B629" Visibility="{Binding MenuRenommage}" Canvas.Left="-100" Canvas.Top="-100" Margin="2,5,0,0" Width="200">
                                        <TextBlock Height="40" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="28"> Nouveau nom</TextBlock>
                                        <my:SurfaceTextBox Height="50" Width="190" FontSize="24">
                                            <TextBox.Text>
                                                <Binding Path="NouveauNom" UpdateSourceTrigger="PropertyChanged"/>
                                            </TextBox.Text>
                                        </my:SurfaceTextBox>
                                        <TextBlock FontSize="20" Foreground="Red" Text="{Binding Texte}"/>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Height="40">
                                            <my:SurfaceButton Name="renommagePoi" VerticalContentAlignment="Center" HorizontalAlignment="Center">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Click">
                                                        <i:InvokeCommandAction Command="{Binding RenommagePoi}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                Renommer
                                            </my:SurfaceButton >
                                            <my:SurfaceButton Name="annulationRenommage" VerticalContentAlignment="Center" HorizontalAlignment="Center">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Click">
                                                        <i:InvokeCommandAction Command="{Binding AnnulationRenommage}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                Annuler
                                            </my:SurfaceButton >
                                        </StackPanel>
                                    </StackPanel>
                                </Canvas>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>
            </my:ScatterViewItem>
        </my:ScatterView>



        <Canvas VerticalAlignment="Center" HorizontalAlignment="Right" Margin="2,5,0,0" Width="100" Height="50">

            <!-- Bouton pour revenir au menu de départ-->
            <my:SurfaceButton Name="home" Canvas.Top="-125" Canvas.Left="20">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseDown">
                        <i:InvokeCommandAction Command="{Binding ElementName=environnement, Path=DataContext.RetourMenuCommande}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Button.Template>
                    <ControlTemplate>
                        <Image Width="40" Height="40" Source="/Prototype1Table;component/Resources/homeG.png"/>
                    </ControlTemplate>
                </Button.Template>
            </my:SurfaceButton>

            <!-- Bouton pour la création des POI-->
            <my:SurfaceButton Name="creationPoi" Canvas.Top="-75" Canvas.Left="20">
                <Button.Template>
                    <ControlTemplate>
                        <Image Width="40" Height="40" Source="/Prototype1Table;component/Resources/newPoi.png"/>
                    </ControlTemplate>
                </Button.Template>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseDown">
                        <i:InvokeCommandAction Command="{Binding ElementName=environnement, Path=DataContext.CreationPoi}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </my:SurfaceButton>

            <!-- Bouton pour aller au niveau 1-->
            <my:SurfaceButton Name="niveau1" Canvas.Top="-25" Canvas.Left="20"  Foreground="White" >
                <Button.Template>
                    <ControlTemplate>
                        <Image Width="40" Height="40">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="/Prototype1Table;component/Resources/niv1G.png" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Niveau}" Value="1">
                                            <Setter Property="Source" Value="/Prototype1Table;component/Resources/niv1Gy.png" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </ControlTemplate>
                </Button.Template>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseDown">
                        <i:InvokeCommandAction Command="{Binding ElementName=environnement, Path=DataContext.ChangerNiveau1}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </my:SurfaceButton>

            <!-- Bouton pour aller au niveau 2-->
            <my:SurfaceButton Name="niveau2" Canvas.Top="25" Canvas.Left="20"  Foreground="White">
                <Button.Template>
                    <ControlTemplate>
                        <Image Width="40" Height="40">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="/Prototype1Table;component/Resources/niv2G.png" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Niveau}" Value="2">
                                            <Setter Property="Source" Value="/Prototype1Table;component/Resources/niv2Gy.png" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </ControlTemplate>
                </Button.Template>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseDown">
                        <i:InvokeCommandAction Command="{Binding ElementName=environnement, Path=DataContext.ChangerNiveau2}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </my:SurfaceButton>

            <!-- Bouton pour aller au niveau 3-->
            <my:SurfaceButton Name="niveau3" Canvas.Top="75" Canvas.Left="20" Foreground="White">
                <Button.Template>
                    <ControlTemplate>
                        <Image Width="40" Height="40">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source" Value="/Prototype1Table;component/Resources/niv3G.png" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Niveau}" Value="3">
                                            <Setter Property="Source" Value="/Prototype1Table;component/Resources/niv3Gy.png" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </ControlTemplate>
                </Button.Template>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseDown">
                        <i:InvokeCommandAction Command="{Binding ElementName=environnement, Path=DataContext.ChangerNiveau3}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </my:SurfaceButton>

            <!-- Bouton d'aide-->
            <my:SurfaceButton Name="aide" Canvas.Top="125" Canvas.Left="20">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseDown">
                        <i:InvokeCommandAction Command="{Binding ElementName=environnement, Path=DataContext.Aide}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Button.Template>
                    <ControlTemplate>
                        <Image Width="40" Height="40" Source="/Prototype1Table;component/Resources/helpG.png"/>
                    </ControlTemplate>
                </Button.Template>
            </my:SurfaceButton>
            
            <StackPanel Visibility="{Binding Aide_ouverte}" Canvas.Top="-175" Canvas.Left="-220" Width="220" Background="#93B629">
                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Width="200" Background="#93B629">
                    <Canvas Height="50" HorizontalAlignment="Right">
                        <Image Width="40" Height="40" Source="/Prototype1Table;component/Resources/helpG.png"/>
                    </Canvas>
                    <TextBlock Width="200" Background ="#93B629" Foreground="White" Canvas.Right="50">
                Bienvenue dans le mode édition de l'application MSVIP.
                    </TextBlock>
                    <TextBlock Width="200" Background ="#93B629" Foreground="White" Canvas.Right="50">
                Vous pouvez y éditer votre vitrine. Pour cela, commencez par choisir le niveau sur lequel vous souhaitez travailler à l'aide des boutons "Niveau 1" "Niveau 2" et "Niveau 3".
                Ensuite vous pouvez :
                    </TextBlock>
                    <TextBlock Width="200" Background ="#93B629" Foreground="White" Canvas.Right="50">
                - créer de nouveaux POI à l'aide du bouton "Créer POI" ;
                    </TextBlock>
                    <TextBlock Width="200" Background ="#93B629" Foreground="White" Canvas.Right="50">
                - déplacer un POI en appuyant sur celui-ci et en le faisant translater ;
                    </TextBlock>
                    <TextBlock Width="200" Background ="#93B629" Foreground="White" Canvas.Right="50">
                - supprimer un POI en sélectionnant l'item en haut à droite du POI, puis en sélectionnant supprimer ;
                    </TextBlock>
                    <TextBlock Width="200" Background ="#93B629" Foreground="White" Canvas.Right="50">
                - renommer un POI en sélectionnant l'item en haut à droite du POI, puis en sélectionnant renommer. Cela va ouvrir un nouveau menu dans lequel il est possible d'entrer un nouveau nom.
                    </TextBlock>
                </StackPanel>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseDown">
                        <i:InvokeCommandAction Command="{Binding ElementName=environnement, Path=DataContext.Aide}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </StackPanel>
        </Canvas>
    </Grid>

    <UserControl.Triggers>
        <EventTrigger RoutedEvent="Loaded">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation 
                        Storyboard.TargetName="home" Storyboard.TargetProperty="(Canvas.Right)"
                        DecelerationRatio="0.6"
                        BeginTime="0:0:0" From="-100" To="0" Duration="0:0:0.6"  FillBehavior="HoldEnd" />
                    <DoubleAnimation 
                        Storyboard.TargetName="aide" Storyboard.TargetProperty="(Canvas.Right)"
                        DecelerationRatio="0.6"
                        BeginTime="0:0:0" From="-100" To="0" Duration="0:0:0.6"  FillBehavior="HoldEnd" />
                    <DoubleAnimation 
                        Storyboard.TargetName="niveau1" Storyboard.TargetProperty="(Canvas.Right)"
                        DecelerationRatio="0.6"
                        BeginTime="0:0:0" From="-100" To="0" Duration="0:0:0.6"  FillBehavior="HoldEnd" />
                    <DoubleAnimation 
                        Storyboard.TargetName="niveau2" Storyboard.TargetProperty="(Canvas.Right)"
                        DecelerationRatio="0.6"
                        BeginTime="0:0:0" From="-100" To="0" Duration="0:0:0.6"  FillBehavior="HoldEnd" />
                    <DoubleAnimation 
                        Storyboard.TargetName="niveau3" Storyboard.TargetProperty="(Canvas.Right)"
                        DecelerationRatio="0.6"
                        BeginTime="0:0:0" From="-100" To="0" Duration="0:0:0.6"  FillBehavior="HoldEnd" />
                    <DoubleAnimation 
                        Storyboard.TargetName="creationPoi" Storyboard.TargetProperty="(Canvas.Right)"
                        DecelerationRatio="0.6"
                        BeginTime="0:0:0" From="-100" To="0" Duration="0:0:0.6"  FillBehavior="HoldEnd" />
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
        <EventTrigger RoutedEvent="Image.Loaded" SourceName="fond1">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation 
                        Storyboard.TargetName="carte" Storyboard.TargetProperty="Opacity"
                        DecelerationRatio="0.6"
                        BeginTime="0:0:0" From="0" To="1" Duration="0:0:1"  FillBehavior="HoldEnd" />
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </UserControl.Triggers>
</UserControl>
