<UserControl x:Class="Prototype1Table.Vue.Menu"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:s="http://schemas.microsoft.com/surface/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:vueModele="clr-namespace:Prototype1Table.VueModele"
             xmlns:vue="clr-namespace:Prototype1Table.Vue"
             xmlns:table="clr-namespace:Prototype1Table"
             table:SurfaceFingerFilter.Filter="True"
             mc:Ignorable="d">
    <UserControl.Resources>
        <Style x:Key="ItemListeVitrineStyle" TargetType="{x:Type s:SurfaceListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Height" Value="200"/>
            <Setter Property="Width" Value="150"/>
        </Style>
    </UserControl.Resources>

    <Grid Name="menu_grid">
        <Canvas Width="1000" Height="350"  HorizontalAlignment="Center" VerticalAlignment="Center">
            <Canvas Name="blocFond" Width="1000" Height="150" Canvas.Top="0" Canvas.ZIndex="2" Opacity="0">
                <Canvas.Style>
                    <Style TargetType="{x:Type Canvas}">
                        <Setter Property="Background" Value="#009BAD" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=menu_grid,Path=DataContext.ModeEdition}" Value="true">
                                <Setter Property="Background" Value="#93B629" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Canvas.Style>
                <TextBlock TextAlignment="Left" Foreground="White" FontSize="80" Padding="0" Canvas.Left="22" Canvas.Top="15">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Text" Value="MSVIP" />
                            <Style.Triggers>         
                                <DataTrigger Binding="{Binding ElementName=menu_grid,Path=DataContext.ModeEdition}" Value="true">      
                                    <Setter Property="Text" Value="MSVIP - Edition" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <Label Foreground="White" Content="Multi Screen Virtual Interactive Presentation" Canvas.Bottom="0" Canvas.Left="22"/>

                <StackPanel Orientation="Vertical" VerticalAlignment="Top" Canvas.Right="10" Margin="2,5,0,0">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <s:SurfaceButton Name="create" Canvas.Top="-55">
                            <s:SurfaceButton.Style>
                                <Style TargetType="{x:Type s:SurfaceButton}">
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=menu_grid,Path=DataContext.ModeEdition}" Value="true">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </s:SurfaceButton.Style>
                            <Button.Template>
                                <ControlTemplate>
                                    <Image Width="40" Height="40">
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Setter Property="Source" Value="/Prototype1Table;component/Resources/newFile.png" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=menu_grid,Path=DataContext.MenuCreateVisible}" Value="true">
                                                        <Setter Property="Source" Value="/Prototype1Table;component/Resources/cancelGD.png" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </ControlTemplate>
                            </Button.Template>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseDown">
                                    <i:InvokeCommandAction Command="{Binding ElementName=menu_grid, Path=DataContext.MenuCreationCommande}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </s:SurfaceButton>

                        <s:SurfaceButton Name="edit" Canvas.Top="-55">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseDown">
                                    <i:InvokeCommandAction Command="{Binding ElementName=menu_grid, Path=DataContext.MenuCommande}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Button.Template>
                                <ControlTemplate>
                                    <Image Width="40" Height="40">
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Setter Property="Source" Value="/Prototype1Table;component/Resources/author.png" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=menu_grid,Path=DataContext.ModeEdition}" Value="true">
                                                        <Setter Property="Source" Value="/Prototype1Table;component/Resources/consult.png" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </ControlTemplate>
                            </Button.Template>
                        </s:SurfaceButton>

                        <s:SurfaceButton Name="aide" VerticalAlignment="Top" HorizontalAlignment="Left" Canvas.Top="-55">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseDown">
                                    <i:InvokeCommandAction Command="{Binding ElementName=menu_grid, Path=DataContext.AideCommande}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Button.Template>
                                <ControlTemplate>
                                    <Image Width="40" Height="40">
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Setter Property="Source" Value="/Prototype1Table;component/Resources/helpD.png" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=menu_grid,Path=DataContext.ModeEdition}" Value="true">
                                                        <Setter Property="Source" Value="/Prototype1Table;component/Resources/helpGD.png" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </ControlTemplate>
                            </Button.Template>
                        </s:SurfaceButton>

                        <s:SurfaceButton Name="exit" VerticalAlignment="Top" HorizontalAlignment="Left" Canvas.Top="-55">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseDown">
                                    <i:InvokeCommandAction Command="{Binding ElementName=menu_grid, Path=DataContext.FermetureCommande}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Button.Template>
                                <ControlTemplate>
                                    <Image Width="40" Height="40">
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Setter Property="Source" Value="/Prototype1Table;component/Resources/close.png" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=menu_grid,Path=DataContext.ModeEdition}" Value="true">
                                                        <Setter Property="Source" Value="/Prototype1Table;component/Resources/closeGD.png" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </ControlTemplate>
                            </Button.Template>
                        </s:SurfaceButton>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Canvas.Top="3" Canvas.Left="160" Background="#FF435029" VerticalAlignment="Center">
                        <StackPanel.Style>
                            <Style TargetType="{x:Type StackPanel}">
                                <Setter Property="Visibility" Value="Hidden" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=menu_grid,Path=DataContext.ModeEdition}" Value="true">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>


                        <StackPanel Name="menuVitrine" Orientation="Horizontal" Height="40" Visibility="{Binding MenuCreate}" Margin="3,0,0,0">
                            <Label Height="40" FontSize="20" VerticalAlignment="Center" Foreground="White">Nom</Label>
                            <s:SurfaceTextBox Name="nomVitrine" Height="40" Width="190" FontSize="24" Margin="10,0,5,0" VerticalContentAlignment="Center" Foreground="White"/>

                            <s:SurfaceButton Name="creationVitrine" HorizontalAlignment="Center" VerticalContentAlignment="Center" Foreground="White">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseDown">
                                        <i:InvokeCommandAction Command="{Binding ElementName=menu_grid,Path=DataContext.CreationVitrineCommande}" CommandParameter="{Binding ElementName=nomVitrine,Path=Text}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                OK
                            </s:SurfaceButton>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
                <Label Canvas.Bottom="10"  Canvas.Right="10" Height="40" FontSize="20" Foreground="Red" Content="{Binding Message}" Visibility="{Binding AffichageErreurCreation}"/>
            </Canvas>

            <s:SurfaceListBox Canvas.ZIndex="1" Opacity="0" Canvas.Top="0"
                          ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                          ScrollViewer.VerticalScrollBarVisibility="Disabled"
                          Name="menu_liste"
                          
                          ItemsSource="{Binding liste_vitrines}"
                          ItemContainerStyle="{StaticResource ItemListeVitrineStyle}"
                          BorderThickness="0" Height="220" Width="1000" HorizontalContentAlignment="Center"
                          IsSynchronizedWithCurrentItem="True" 
                          SelectedValue="{Binding SelectedSnapshotValue}">
                <s:SurfaceListBox.Style>
                    <Style TargetType="{x:Type s:SurfaceListBox}">
                        <Setter Property="Background" Value="#1E555B" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=menu_grid,Path=DataContext.ModeEdition}" Value="true">
                                <Setter Property="Background" Value="#FF435029"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </s:SurfaceListBox.Style>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding ElementName=menu_grid, Path=DataContext.LancementCommande}"
                                                           CommandParameter="{Binding ElementName=menu_liste, Path=SelectedItem.Chemin}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <!-- Definition du style de la liste des vitrine -->
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"></StackPanel>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>

                <!-- Definition du style de la liste des vitrine -->
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Canvas Width="150" Height="200">
                            <Canvas Margin="5,8,0,0" Height="160" Width="133" Background="#53000000"/>
                            <Image Margin="-5,-10,0,0" Name="Img" Source="{Binding Apercu}" Height="160" HorizontalAlignment="Center" Canvas.Top="10"/>
                            <TextBlock Name="Txt" Text="{Binding Nom}" Width="150" Foreground="White" Canvas.Bottom="10" FontSize="11" TextAlignment="Center" />
                        </Canvas>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </s:SurfaceListBox>
        </Canvas>
        <Grid VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="{Binding AffichageErreurLancement}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="450"/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>
            <Button Name="BoutonFermeture" Height="30" Width="30" Foreground="{x:Null}" BorderBrush="{x:Null}" 
                        Background="{x:Null}" BorderThickness="0" UseLayoutRounding="True"
                        Grid.Column="0" Grid.Row="1">
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle Fill="#009BAD"/>
                            <Path Stroke="#FFFFFFFF" StrokeThickness="3.0" StrokeLineJoin="Round" Fill="{x:Null}"
                          Data="M 7,7 L 23,23" UseLayoutRounding="False" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat" />
                            <Path Stroke="#FFFFFFFF" StrokeThickness="3.0" StrokeLineJoin="Round" Fill="{x:Null}"
                          Data="M 23,7 L 7,23" UseLayoutRounding="False" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat" />
                        </Grid>
                    </ControlTemplate>
                </Button.Template>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseUp">
                        <i:InvokeCommandAction Command="{Binding ElementName=menu_grid,Path=DataContext.FermetureErreurCommande}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Label Height="40" FontSize="20" VerticalAlignment="Center" Content="{Binding MessageErreur}"
                       Grid.Column="1" Grid.Row="1"/>
        </Grid>

        <Grid Visibility="{Binding AideVisible}" VerticalAlignment="Center" HorizontalAlignment="Center">
            <Viewbox>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid.Resources>
                        <!--Diaporamas-->
                        <DataTemplate DataType="{x:Type vueModele:DiaporamaVM}">
                            <vue:Diaporama/>
                        </DataTemplate>
                    </Grid.Resources>
                    <Canvas Name="ChargementConteneur" Width="400" Height="250" Grid.ZIndex="1" Grid.Column="0" Grid.Row="1">
                        <Grid Name="ChargementCercle" Margin="200,125,0,0" >
                            <Path  StrokeThickness="10" StrokeLineJoin="Round" Fill="{x:Null}"
                                            Data="M -50,0 A 33,33 45 0 1 50,0" UseLayoutRounding="False" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat">
                                <Path.Stroke>
                                    <LinearGradientBrush>
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0.25" Color="#00009BAD" />
                                            <GradientStop Offset="0.9" Color="#FF009BAD" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Path.Stroke>
                            </Path>
                            <Path Stroke="#FF009BAD" StrokeThickness="10" StrokeLineJoin="Round" Fill="{x:Null}" 
                                              Data="M -50,0 A 33,33 45 0 0 50,0" UseLayoutRounding="False" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                            </Path>
                            <Grid.RenderTransform>
                                <RotateTransform/>
                            </Grid.RenderTransform>
                            <Grid.Triggers>
                                <EventTrigger RoutedEvent="Loaded">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(Rectangle.RenderTransform).(RotateTransform.Angle)" To="-360" Duration="0:0:1" RepeatBehavior="Forever"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Grid.Triggers>
                        </Grid>
                    </Canvas>

                    <ContentPresenter Content="{Binding CheminAide}" Grid.Column="0" Grid.Row="1" Grid.ZIndex="2" />
                    <Button Grid.ZIndex="3" VerticalAlignment="Top" Margin="-60,30,0,0" Grid.RowSpan="2" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="0" Height="50" Width="50" Foreground="{x:Null}" BorderBrush="{x:Null}" Background="{x:Null}" BorderThickness="0">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid>
                                    <Rectangle Fill="#009BAD"/>
                                    <Path Stroke="#FFFFFFFF" StrokeThickness="4.0" StrokeLineJoin="Round" Fill="{x:Null}"
                                                        Data="M 10,10 L 40,40" UseLayoutRounding="False" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat" />
                                    <Path Stroke="#FFFFFFFF" StrokeThickness="4.0" StrokeLineJoin="Round" Fill="{x:Null}"
                                                        Data="M 40,10 L 10,40" UseLayoutRounding="False" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat" />
                                </Grid>
                            </ControlTemplate>
                        </Button.Template>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDown">
                                <i:InvokeCommandAction Command="{Binding ElementName=menu_grid, Path=DataContext.AideCommande}" CommandParameter="{Binding}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                </Grid>
            </Viewbox>
        </Grid>
    </Grid>

    <UserControl.Triggers>
        <EventTrigger RoutedEvent="Loaded">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation 
                        Storyboard.TargetName="blocFond" Storyboard.TargetProperty="Opacity"
                        BeginTime="0:0:1" From="0" To="1" Duration="0:0:1.4"  FillBehavior="HoldEnd" />

                    <DoubleAnimation 
                        Storyboard.TargetName="menu_liste" Storyboard.TargetProperty="Opacity"
                        BeginTime="0:0:2.4" From="0" To="1" Duration="0:0:1"  FillBehavior="HoldEnd" />
                    <DoubleAnimation 
                        Storyboard.TargetName="menu_liste" Storyboard.TargetProperty="(Canvas.Top)"
                        DecelerationRatio="0.6"
                        BeginTime="0:0:2.4" From="0" To="150" Duration="0:0:0.8"  FillBehavior="HoldEnd" />

                    <DoubleAnimation 
                        Storyboard.TargetName="edit" Storyboard.TargetProperty="(Canvas.Top)"
                        DecelerationRatio="0.6"
                        BeginTime="0:0:3.2" From="-55" To="0" Duration="0:0:0.8"  FillBehavior="HoldEnd" />
                    <DoubleAnimation 
                        Storyboard.TargetName="exit" Storyboard.TargetProperty="(Canvas.Top)"
                        DecelerationRatio="0.6"
                        BeginTime="0:0:3.2" From="-55" To="0" Duration="0:0:0.8"  FillBehavior="HoldEnd" />
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </UserControl.Triggers>
</UserControl>
