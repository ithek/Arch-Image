<Grid xmlns:my="clr-namespace:Microsoft.Surface.Presentation.Controls;assembly=Microsoft.Surface.Presentation" x:Class="Prototype1Table.Vue.Couronne"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:s="http://schemas.microsoft.com/surface/2008" 
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      xmlns:local="clr-namespace:Prototype1Table.VueModele"
      xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF4"
      xmlns:table="clr-namespace:Prototype1Table"
      xmlns:TextOnAPath="clr-namespace:TextOnAPath;assembly=TextOnAPath"
      table:SurfaceFingerFilter.Filter="True"
      mc:Ignorable="d"
      Name="couronne" RenderTransformOrigin="0,0">


    <Viewbox Width="{Binding WidthCouronne, Mode=OneWay}" Height="{Binding WidthCouronne, Mode=OneWay}" MaxWidth="4000" MaxHeight="4000" >
        <Grid>
            <Grid.Resources>
                <Style x:Key="ScatterViewItemStyle" TargetType="{x:Type s:ScatterViewItem}">
                    <Setter Property="Width" Value="100"/>
                    <Setter Property="Height" Value="100"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="CanRotate" Value="False"/>
                    <Setter Property="CanScale" Value="False"/>
                    <Setter Property="CanMove" Value="True"/>
                    <Setter Property="Focusable" Value="True"/>
                    <Setter Property="Deceleration" Value="1"/><!--empeche l'inertie-->
                    <Setter Property="Orientation" Value="{Binding orientation, Mode=OneWay}"/>
                    <Setter Property="Center" Value="{Binding pos, Mode=TwoWay}"/>
                    <Setter Property="Clip">
                        <Setter.Value>
                            <PathGeometry>
                                <PathFigure StartPoint="{Binding A}">
                                    <ArcSegment Point="{Binding E}" Size="0,0"/>
                                    <ArcSegment Point="{Binding F}" Size="145,145" SweepDirection="Clockwise"/>
                                    <ArcSegment Point="{Binding D}" Size="0,0"/>
                                    <ArcSegment Point="{Binding A}" Size="75,75"/>
                                </PathFigure>
                            </PathGeometry>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Canvas Name="apercu">
                                    <Canvas.Resources >
                                        <PathGeometry x:Key="masque">
                                            <PathFigure StartPoint="{Binding A}">
                                                <ArcSegment Point="{Binding B}" Size="0,0"/>
                                                <ArcSegment Point="{Binding C}" Size="125,125" SweepDirection="Clockwise"/>
                                                <ArcSegment Point="{Binding D}" Size="0,0"/>
                                                <ArcSegment Point="{Binding A}" Size="75,75"/>
                                            </PathFigure>
                                        </PathGeometry>
                                        <PathGeometry x:Key="masque2">
                                            <PathFigure StartPoint="{Binding B}">
                                                <ArcSegment Point="{Binding E}" Size="0,0"/>
                                                <ArcSegment Point="{Binding F}" Size="145,145" SweepDirection="Clockwise"/>
                                                <ArcSegment Point="{Binding C}" Size="0,0"/>
                                                <ArcSegment Point="{Binding B}" Size="125,125"/>
                                            </PathFigure>
                                        </PathGeometry>
                                        <PathGeometry x:Key="EllipseGeometry" Figures="M 10,0 A 135,135 30 0 0 90,0 z"/>
                                    </Canvas.Resources>
                                    <Rectangle Width="100" Height="60" Fill="#FF009BAD" Clip="{StaticResource masque}"/>
                                    <MediaElement Source="{Binding cheminMiniature}" Clip="{StaticResource masque}"/>
                                    <Grid Canvas.Bottom="0" Background="#FF009BAD" Height="100" Width="100" Clip="{StaticResource masque2}">
                                        <Grid.Style>
                                            <Style TargetType="{x:Type Grid}">
                                                <Style.Triggers >
                                                    <DataTrigger Binding="{Binding visible}" Value="true">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding visible}" Value="false">
                                                        <Setter Property="Visibility" Value="Hidden"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Grid.Style>
                                            <TextOnAPath:TextOnAPath Text="{Binding Nom}" DrawPath="False" Margin="-5,51,0,0" Foreground="White" FontSize="11" TextPath="{StaticResource EllipseGeometry}">
                                            </TextOnAPath:TextOnAPath>
                                    </Grid>
                                </Canvas>
                                </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <!-- on cache les apercus si ils ne sont pas dans la roue-->
                        <DataTrigger Binding="{Binding visible}" Value="false">
                            <Setter Property="CanMove" Value="False"/> 
                            <Setter Property="Focusable" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <Style x:Key="ellipseStyle" TargetType="{x:Type my:ScatterViewItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Grid>
                                    <Ellipse Stroke="#1E555B" StrokeThickness="50"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Grid.Resources>

            <!--Ellipse de fond-->
            <Ellipse Name="ellipse" StrokeThickness="0" Fill="#60FFFFFF"/>
            
            <!--Menu d'envoi-->
            <!--<Grid Height="120" Width="120">
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Style.Triggers >
                            <DataTrigger Binding="{Binding menuEnvoiVisible}" Value="true">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding menuEnvoiVisible}" Value="false">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </Style.Triggers >
                    </Style>
                </Grid.Style>
                <Image HorizontalAlignment="Left" Width="60" Height="120" Source="/Prototype1Table;component/Resources/TbiRond.png"/>
                <Image HorizontalAlignment="Right" Width="60" Height="120" Source="/Prototype1Table;component/Resources/TabletteRond.png"/>
            </Grid>-->

            <!--fermeture du poi-->
            <Button Name="BoutonFermeture" Height="30" Width="30" Foreground="{x:Null}" BorderBrush="{x:Null}" Background="{x:Null}" BorderThickness="0" UseLayoutRounding="True">
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Ellipse Fill="#009BAD"/>
                            <Path Stroke="#FFFFFFFF" StrokeThickness="2.0" StrokeLineJoin="Round" Fill="{x:Null}"
                          Data="M 10,10 L 20,20" UseLayoutRounding="False" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat" />
                            <Path Stroke="#FFFFFFFF" StrokeThickness="2.0" StrokeLineJoin="Round" Fill="{x:Null}"
                          Data="M 20,10 L 10,20" UseLayoutRounding="False" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat" />
                        </Grid>
                    </ControlTemplate>
                </Button.Template>
                <!--animations-->
                <Button.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard>
                            <Storyboard Name="AnimationChargement">
                                <DoubleAnimation Storyboard.TargetName="couronne" Storyboard.TargetProperty="Opacity"
                                            BeginTime="0:0:0" From="0" To="1" Duration="0:0:0.1"  FillBehavior="HoldEnd" />
                                <DoubleAnimation Storyboard.TargetName="ellipse" Storyboard.TargetProperty="Width"
                                            BeginTime="0:0:0" From="1" To="{Binding diametre}" Duration="0:0:0.2"  FillBehavior="HoldEnd" />
                                <DoubleAnimation Storyboard.TargetName="ellipse" Storyboard.TargetProperty="Height"
                                            BeginTime="0:0:0" From="1" To="{Binding diametre}" Duration="0:0:0.2"  FillBehavior="HoldEnd" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent= "Button.Click">
                        <BeginStoryboard>
                            <Storyboard  Name="AnimationDisparition">
                                <DoubleAnimation Storyboard.TargetName="couronne" Storyboard.TargetProperty="Opacity"
                                            BeginTime="0:0:0" From="1" To="0" Duration="0:0:0.1"  FillBehavior="HoldEnd" />
                                <DoubleAnimation Storyboard.TargetName="ellipse" Storyboard.TargetProperty="Width"
                                            BeginTime="0:0:0" From="{Binding diametre}" To="0" Duration="0:0:0.2"  FillBehavior="HoldEnd" />
                                <DoubleAnimation Storyboard.TargetName="ellipse" Storyboard.TargetProperty="Height"
                                            BeginTime="0:0:0" From="{Binding diametre}" To="0" Duration="0:0:0.2"  FillBehavior="HoldEnd" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Button.Triggers>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Completed" SourceName="AnimationDisparition" >
                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}, Path=DataContext.LancementCommande}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>

            <!--Aperçus-->
            <s:ScatterView Name="ScatterV" Height="{Binding tailleCouronne}" Width="{Binding tailleCouronne}" ItemContainerStyle="{StaticResource ScatterViewItemStyle}" ItemsSource="{Binding apercus}"                   
                MouseDown="apercu_TapGesture" s:TouchExtensions.PreviewTapGesture="apercu_TapGesture" PreviewTouchUp="ScatterView_PreviewTouchUp"/>
        </Grid>
    </Viewbox>
</Grid>
    